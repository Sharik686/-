// –°–æ–∑–¥–∞—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—á–∫–æ–≤, –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å 0 —Ç–∞–∫ –∫–∞–∫ –Ω–∞—á–∏–Ω–∞–µ–º —Å 1 .
let score = 0;
let currentQuestion = 0;
let userAnswers = [];

// –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ—Å—Ç–∞--------------------------------------------------------------------------------

const questions = [
  {
    type: "choice",
    question: "–ö–∞–∫–æ–π —Ñ–∏–ª—å–º –ø–æ–ª—É—á–∏–ª –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –û—Å–∫–∞—Ä–æ–≤ –≤ –∏—Å—Ç–æ—Ä–∏–∏?",
    options: [
      "a) –¢–∏—Ç–∞–Ω–∏–∫",
      "b) –í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü: –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–æ—Ä–æ–ª—è",
      "c) –ë–µ–Ω-–ì—É—Ä",
      "d) –ê–≤–∞—Ç–∞—Ä",
    ],
    correct: "b",
  },
  {
    type: "choice",
    question: "–ö—Ç–æ —Ä–µ–∂–∏—Å—Å–µ—Ä —Ñ–∏–ª—å–º–∞ '–ö—Ä–µ—Å—Ç–Ω—ã–π –æ—Ç–µ—Ü'?",
    options: [
      "a) –ú–∞—Ä—Ç–∏–Ω –°–∫–æ—Ä—Å–µ–∑–µ",
      "b) –§—Ä—ç–Ω—Å–∏—Å –§–æ—Ä–¥ –ö–æ–ø–ø–æ–ª–∞",
      "c) –°—Ç–∏–≤–µ–Ω –°–ø–∏–ª–±–µ—Ä–≥",
      "d) –ö–≤–µ–Ω—Ç–∏–Ω –¢–∞—Ä–∞–Ω—Ç–∏–Ω–æ",
    ],
    correct: "b",
  },
  {
    type: "choice",
    question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –≤—ã—à–µ–ª –ø–µ—Ä–≤—ã–π —Ñ–∏–ª—å–º –æ –ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä–µ?",
    options: ["a) 1999", "b) 2001", "c) 2003", "d) 2005"],
    correct: "b",
  },
  {
    type: "choice",
    question: "–ö–∞–∫–æ–π –∞–∫—Ç–µ—Ä —Å—ã–≥—Ä–∞–ª –¢–æ–Ω–∏ –°—Ç–∞—Ä–∫–∞ –≤ —Ñ–∏–ª—å–º–∞—Ö Marvel?",
    options: [
      "a) –ö—Ä–∏—Å –≠–≤–∞–Ω—Å",
      "b) –ö—Ä–∏—Å –•–µ–º—Å–≤–æ—Ä—Ç",
      "c) –†–æ–±–µ—Ä—Ç –î–∞—É–Ω–∏-–º–ª–∞–¥—à–∏–π",
      "d) –ú–∞—Ä–∫ –†—É—Ñ—Ñ–∞–ª–æ",
    ],
    correct: "c",
  },
  {
    type: "choice",
    question: "–ö–∞–∫–æ–π —Ñ–∏–ª—å–º —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º—ã–º –∫–∞—Å—Å–æ–≤—ã–º –≤ –∏—Å—Ç–æ—Ä–∏–∏?",
    options: [
      "a) –ê–≤–∞—Ç–∞—Ä",
      "b) –ú—Å—Ç–∏—Ç–µ–ª–∏: –§–∏–Ω–∞–ª",
      "c) –¢–∏—Ç–∞–Ω–∏–∫",
      "d) –ó–≤–µ–∑–¥–Ω—ã–µ –≤–æ–π–Ω—ã: –ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ —Å–∏–ª—ã",
    ],
    correct: "a",
  },
  {
    type: "choice",
    question: "–ö—Ç–æ —Å—ã–≥—Ä–∞–ª –î–∂–æ–∫–µ—Ä–∞ –≤ —Ñ–∏–ª—å–º–µ '–¢–µ–º–Ω—ã–π —Ä—ã—Ü–∞—Ä—å'?",
    options: [
      "a) –•–æ–∞–∫–∏–Ω –§–µ–Ω–∏–∫—Å",
      "b) –î–∂–∞—Ä–µ–¥ –õ–µ—Ç–æ",
      "c) –•–∏—Ç –õ–µ–¥–∂–µ—Ä",
      "d) –î–∂–µ–∫ –ù–∏–∫–æ–ª—Å–æ–Ω",
    ],
    correct: "c",
  },
  {
    type: "choice",
    question: "–ö–∞–∫–æ–π —Å—Ç—É–¥–∏–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ñ—Ä–∞–Ω—à–∏–∑–∞ '–ú—Å—Ç–∏—Ç–µ–ª–∏'?",
    options: [
      "a) DC Comics",
      "b) Sony Pictures",
      "c) Marvel Studios",
      "d) Universal Pictures",
    ],
    correct: "c",
  },
  {
    type: "input",
    question: "–ö–∞–∫–æ–π –∞–∫—Ç–µ—Ä —Å—ã–≥—Ä–∞–ª –ù–µ–æ –≤ –º–∞—Ç—Ä–∏—Ü–µ?",
    correctAnswer: "–ö–∏–∞–Ω—É –†–∏–≤–∑",
    synonyms: ["–ö–∏–∞–Ω—É –†–∏–≤–∑", "Keanu Reeves", "–†–∏–≤–∑"],
  },
  {
    type: "input",
    question: "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å —Ç—Ä–∏–ª–æ–≥–∏–∏ '–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü'?",
    correctAnswer: "–ë—Ä–∞—Ç—Å—Ç–≤–æ –∫–æ–ª—å—Ü–∞",
    synonyms: [
      "–ë—Ä–∞—Ç—Å—Ç–≤–æ –∫–æ–ª—å—Ü–∞",
      "–ë—Ä–∞—Ç—Å—Ç–≤–æ –ö–æ–ª—å—Ü–∞",
      "The Fellowship of the Ring",
    ],
  },
  {
    type: "input",
    question: "–ö—Ç–æ —Ä–µ–∂–∏—Å—Å–µ—Ä —Ñ–∏–ª—å–º–∞ '–ü–æ–±–µ–≥ –∏–∑ –®–æ—É—à–µ–Ω–∫–∞'?",
    correctAnswer: "–§—Ä—ç–Ω–∫ –î–∞—Ä–∞–±–æ–Ω—Ç",
    synonyms: ["–§—Ä—ç–Ω–∫ –î–∞—Ä–∞–±–æ–Ω—Ç", "Frank Darabont", "–î–∞—Ä–∞–±–æ–Ω—Ç"],
  },
];

// —Å–æ–∑–¥–∞—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –≤–æ–ø—Ä–æ—Å–æ–≤. –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –Ω–∞ –≤–µ—Å—å –¥–æ–∫—É–º–µ–Ω—Ç

document.addEventListener("DOMContentLoaded", function () {
  showStartScreen();

  document.addEventListener("click", function (e) {
    if (e.target.id === "start-btn") {
      startTest();
    } else if (e.target.classList.contains("option-btn")) {
      handleAnswer(e.target);
    } else if (e.target.id === "submit-answer") {
      handleInputAnswer();
    } else if (e.target.id === "next-btn") {
      nextQuestion();
    } else if (e.target.id === "restart-btn") {
      restartTest();
    }
  });
});

function showStartScreen() {
  const testContainer = document.getElementById("test__container");

  let html = `
    <div class="start-screen">
    <h2 class="start-title">–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –≤–∏–∫—Ç–æ—Ä–∏–Ω—É</h2>
    <p class="start-desc">–í —ç—Ç–æ–º —Ç–µ—Å—Ç–µ –±—É–¥–µ—Ç 10 –≤–æ–ø—Ä–æ—Å–æ–≤. 7 —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–æ–≤ –∏ 3 —Å –ø–æ–ª–µ–º –¥–ª—è –≤–≤–æ–¥–∞. –ó–∞ 1 –≤–æ–ø—Ä–æ—Å —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–∞ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å 1 –±–∞–ª–ª, –∞ –∑–∞ –≤–æ–ø—Ä–æ—Å —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ 2 –±–∞–ª–ª–∞</p>
    <button id="start-btn">–ù–µ –±—É–¥–µ–º —Ç—è–Ω—É—Ç—å</button>
    </div>
    `;

  testContainer.innerHTML = html;
}

function startTest() {
  score = 0;
  userAnswers = [];
  currentQuestion = 0;
  showQuestion();
}

function showQuestion() {
  if (currentQuestion >= questions.length) {
    showResults();
  }

  const testContainer = document.getElementById("test__container");

  let html = `
    <div class="question">
    <h3>–í–æ–ø—Ä–æ—Å : ${currentQuestion + 1}/${questions.length}</h3>
    <div class="question-disc">${questions[currentQuestion].question}</div>
    <div class="answers">
    `;

  if (questions[currentQuestion].type === "choice") {
    questions[currentQuestion].options.forEach((option, i) => {
      html += `
            <button class="option-btn" data-value="${option[0]}">${option}</button>
            `;
    });
  } else if (questions[currentQuestion].type === "input") {
    html += `
        <input id="input-answer" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç">
        <button id="submit-answer">–û—Ç–≤–µ—Ç–∏—Ç—å</button>
        `;
  }
  html += `</div><div id="feedback"></div></div>`;

  testContainer.innerHTML = html;
}

function handleAnswer(button) {
  const allButons = document.querySelectorAll(".option-btn");
  allButons.forEach((btn) => {
    btn.disabled = true;
  });

  const question = questions[currentQuestion].question;
  const userAnswer = button.dataset.value;
  const isCorrect = userAnswer === questions[currentQuestion].correct;

  userAnswers.push({
    question: question,
    userAnswer: userAnswer,
    correctAnswer: questions[currentQuestion].correct,
    isCorrect: isCorrect,
  });

  allButons.forEach((btn) => {
    if (btn.dataset.value === questions[currentQuestion].correct) {
      btn.classList.add("correct");
    }
    if (btn === button && !isCorrect) {
      btn.classList.add("incorrect");
    }
  });
  if (isCorrect) {
    score++;
  }
  showFeedback(isCorrect);
  console.log(userAnswers);
  
}

function handleInputAnswer() {
  const question = questions[currentQuestion].question;
  const input = document.getElementById("input-answer");
  const userAnswer = input.value.trim().toLowerCase();
  let isCorrect =
    userAnswer === questions[currentQuestion].correctAnswer.toLowerCase();
  input.disabled = true;
  document.getElementById("submit-answer").disabled = true;

  if (!isCorrect && questions[currentQuestion].synonyms) {
    isCorrect = questions[currentQuestion].synonyms.some(
      (synonym) => userAnswer === synonym.toLowerCase()
    );
  }

  userAnswers.push({
    question: question,
    userAnswer: userAnswer,
    correctAnswer: questions[currentQuestion].correctAnswer,
    isCorrect: isCorrect,
  });
  if (isCorrect) {
    score += 2;
  }
  showFeedback(isCorrect);
}

function showFeedback(isCorrect) {
  const feedback = document.getElementById("feedback");

  let html = `
    <div class="correct-answer">${isCorrect ? "‚úÖ –í–ï–†–ù–û!" : "‚ùå –ù–ï–í–ï–†–ù–û!"}</div>
    <button id="next-btn">–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å</button>`;
  feedback.innerHTML = html;
}

function nextQuestion() {
  currentQuestion++;
  showQuestion();
}

function showResults() {
  const testContainer = document.getElementById("test__container");

  let html = `
    <div class="results">
    <h2 class="result-title">üé¨ –ò—Ç–æ–≥–∏ –í–∏–∫—Ç–æ—Ä–∏–Ω—ã</h2>
    <p class="result-desc">–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${score}/${questions.length + 3}</p>
    <div class="result-score">${
      score <= 6
        ? "–¢–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç—è–Ω—É—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ –∫–∏–Ω–æ—Ñ–∏–ª—å–º–∞–º"
        : score  <= 9
        ? "–í—Å–µ –Ω–µ —Ç–∞–∫ —É–∂ –ø–ª–æ—Ö–æ, –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ"
        : "–¢—ã –º–æ–ª–æ–¥–µ—Ü, —É —Ç–µ–±—è —Ö–æ—Ä–æ—à–∏–µ –ø–æ–∑–Ω–∞–Ω–∏—è –≤ –∫–∏–Ω–æ–∏–Ω–¥—É—Å—Ç—Ä–∏–∏"
    }
    </div>`;
    userAnswers.forEach((answer, index) => {
    
    html += `
    <div class=${answer.isCorrect ? "correct-user-answer" : "incorrect-user-answer"}>
    <p><strong>–í–æ–ø—Ä–æ—Å ${index + 1}:</strong>${answer.question}</p>
    <p>–í–∞—à –æ—Ç–≤–µ—Ç: ${answer.userAnswer}</p>
    <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${answer.correctAnswer}</p>
    <p>${answer.isCorrect ? '‚úÖ –í–µ—Ä–Ω–æ' : '‚ùå –ù–µ–≤–µ—Ä–Ω–æ'}</p>
    </div>`;
    });

    html += `
    <div class="restart-btn">
    <button id="restart-btn">–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</button>
    </div>
    `;

    testContainer.innerHTML = html;
}

function restartTest() {
    score = 0;
    userAnswers = [];
    currentQuestion = 0;
    showStartScreen();
}